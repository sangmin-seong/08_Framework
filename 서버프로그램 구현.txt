"다음은 학생관리 프로그램에 대한 코드 중 일부이다.
메인페이지에서 학생 이름, 나이, 주소를 입력받아 제출한 뒤
 student/select.html 에서 출력하려고 하였으나 원하는 결과가 도출되지 않았다.
 문제의 [원인]과 [조치내용]을 모두 찾아 작성하시오.
 (단, 생략된 코드 또는 클래스는 정상적으로 작동한다고 간주할 것,
 import 구문은 문제와 관계없음)

(원인과 조치내용은 여러개일 수 있으며, 
반드시 원인에 대한 조치내용을 작성해야 합니다)

원인)
1. (StudentController 클래스) @Controller가 명시되지 않았음.

2. (StudentController 클래스​) @PostMappint("select") 요청 주소가 잘못됨.

3. (StudentController 클래스​/ index.html) @ModelAttribute를 사용하여 전달받은 파라미터를
   커맨드 객체로 생성할 때 전달받은 파라미터의 name 속성값이 DTO의 필드명과 동일하여야함.
   name 속성값과 DTO필드명이 달라 전달 받지 못하는 에러가 발생함.
4. (select.html) 조회 결과로 전달받을 때 Thymeleaf 속성을 사용하여 전달 받으려 하였으나,
   속성을 사용한 방법이 잘못 작성되었음.

1. StudentContoller 클래스가 컨트롤러 역할을 하는 Bean을 등록되지 않아 요청을 매핑할 수 없음

2. form의 제출 주소는 "/student/select"인데

컨트롤러의 selectStudent() 메서드는 "select" 만 작성되어 있어

요청이 매핑되지 않음

3. @ModelAttribute를 이용하여 Student 객체에 제출된 파라미터를 자동 세팅하기 위해서는

파라미터의 key값(name 속성 값)과 필드명이 같아야 하는데 같지 않아 필드 값이 없는 문제 발생

4. 조회 결과 페이지에서 세팅된 값을 얻어와 출력하는 Spring EL 구문 ker값이

컨트롤러 Model에 세팅할 때의 key값과 일치하지 않아 출력되지 않는 문제 발생.

해결방안)
1. 요청에 대해 응답하고 처리하는 Controller 임을 명시하고, Spring이 생성/관리하는 객체인 Bean으로 등록gkdu
   요청 처리된 결과에 따라 어떠한 응답을 할지 방법을 제어하기 위해 작성이 필요하다.
2. 요청 주소에 대한 요청을 처리하는 메서드로 student/select라는 요청 주소에서 /student로 시작하는 요청을
   컨트롤러에 @RequestMapping("student")를 사용하여 매핑하거나, @PostMapping("student/select")로 수정이 필요함
3.  전달받은 name속성값은 ("name" / "age" / "addr") 이며,
    DTO의 필드명은 stdName / stdAge / stdAddress이므로, 한쪽의 이름을 변경하여 맞출 수 있다.
    ==>(index.html)
               이름 : <input type="text" name="stdName"> <br>
               나이 : <input type="number" name="stdAge"> <br>
               주소 : <input type="text" name="stdAddress"> <br> 
   위와 같이 수정한다.
4. Model을 이용하여 전달 받아온 정보를 사용할 때 Thymeleaf는 HTML의 속성형태로 작성 되기 때문에
   전달받은 값에 대해 동일하게 param.OO으로 작성을해야한다.
   ==>(select.html)
                <h4 th:text="|${param.stdName} 님|"></h4>
                <h4 th:text="|${param.stdAge}세|"></h4>
                <h4 th:text="|주소 : ${param.stdAddress}|"></h4>

1. 요청에 대해 응답하고 처리하는 Controller 임을 명시하고, Spring이 생성/관리하는 객체인 Bean으로 등록하여
   요청 처리된 결과에 따라 어떠한 응답을 할지 방법을 제어하기 위해 작성이 필요하다.
2. 요청 주소에 대한 요청을 처리하는 메서드로 student/select라는 요청 주소에서 /student로 시작하는 요청을
   컨트롤러에 @RequestMapping("student")를 사용하여 매핑하거나, @PostMapping("student/select")로 수정이 필요함
3.  전달받은 name속성값은 ("name" / "age" / "addr") 이며,
    DTO의 필드명은 stdName / stdAge / stdAddress이므로, 한쪽의 이름을 변경하여 맞출 수 있다.
    ==>(index.html)
               이름 : <input type="text" name="stdName"> <br>
               나이 : <input type="number" name="stdAge"> <br>
               주소 : <input type="text" name="stdAddress"> <br> 
   위와 같이 수정한다.

4. Model을 이용하여 전달 받아온 정보를 사용할 때 Thymeleaf는 HTML의 속성형태로 작성 되기 때문에
   전달받은 값에 대해 동일하게 param.OO으로 작성을해야한다.
   ==>(select.html)
                <h4 th:text="|${param.stdName} 님|"></h4>
                <h4 th:text="|${param.stdAge}세|"></h4>
                <h4 th:text="|주소 : ${param.stdAddress}|"></h4>​



-> 조치 방법으로 Model을 이용해서 전달 받은 값을 출력하려고 한 것 같으나

  작성된 코드는 request scope에 담겨있는 parameter를 얻어와 출력하고 있음

--> 문제에서 의도한 코드는 아니지만 최종 결과가 일치하기 때문에 감점 없음